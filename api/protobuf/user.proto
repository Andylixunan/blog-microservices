syntax = "proto3";

package api.protobuf;

option go_package = "github.com/stonecutter/blog-microservices/api/protobuf";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service UserService {
  rpc GetUserListByIDs(GetUserListByIDsRequest) returns (GetUserListByIDsResponse) {}
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserResponse) {}
  rpc GetUserByUsername(GetUserByUsernameRequest) returns (GetUserResponse) {}
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}

message User {
  uint64 id = 1;
  string username = 2;
  string email = 3;
  string avatar = 5;
  string password = 4;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message GetUserListByIDsRequest {
  repeated uint64 ids = 1;
}

message GetUserListByIDsResponse {
  repeated User users = 1;
}

message GetUserRequest {
  uint64 id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUserByEmailRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2;
}

message GetUserByUsernameRequest {
  string username = 1 [(validate.rules).string = {min_len: 1, max_len: 30}];
  string password = 2;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
}

message UpdateUserResponse {
  bool success = 1;
}

message DeleteUserRequest {
  uint64 id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}