syntax = "proto3";

package api.protobuf.comment.v1;

option go_package = "github.com/stonecutter/blog-microservices/api/protobuf/comment/v1";

import 'google/protobuf/timestamp.proto';
import "validate/validate.proto";

service CommentService {
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {}
  rpc CreateCommentCompensate(CreateCommentRequest) returns (CreateCommentResponse) {}
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse) {}
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse) {}
  rpc GetCommentListByPostID(GetCommentListByPostIDRequest) returns (GetCommentListByPostIDResponse) {}
}

message Comment {
  uint64 id = 1;
  string uuid = 2;
  string content = 3 [(validate.rules).string = {min_len: 1, max_len: 140}];
  uint64 post_id = 4;
  uint64 user_id = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message CreateCommentRequest {
  Comment comment = 1;
}

message CreateCommentResponse {
  Comment comment = 1;
}

message UpdateCommentRequest {
  Comment comment = 1;
}

message UpdateCommentResponse {
  bool success = 1;
}

message DeleteCommentRequest {
  uint64 id = 1;
}

message DeleteCommentResponse {
  bool success = 1;
}

message GetCommentListByPostIDRequest {
  uint64 post_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetCommentListByPostIDResponse {
  repeated Comment comments = 1;
  uint64 total = 2;
}
